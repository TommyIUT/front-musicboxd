{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\killt\\\\Documents\\\\POLYTECH\\\\IG3\\\\S6\\\\ProjetWeb\\\\Musicboxd\\\\Musicboxd\\\\Musicboxd\\\\front-musicboxd\\\\src\\\\components\\\\adminView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Sidebar from './sidebar';\nimport { Link, useNavigate } from 'react-router-dom';\nimport Stack from '@mui/material/Stack';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport gotham from '../font/GothamBold.ttf';\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\nimport '../styles/adminview.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdminView(_ref) {\n  _s();\n  let {\n    isAdmin,\n    setIsAdmin,\n    user,\n    setUser,\n    isConnected,\n    setIsConnected\n  } = _ref;\n  const navigate = useNavigate();\n  const [usersData, setUsersData] = useState(null);\n  useEffect(() => {\n    if (user === '' || !isAdmin) {\n      navigate('/login');\n    } else {\n      fetchUsers();\n    }\n  }, [user, navigate]);\n  async function fetchUsers() {\n    try {\n      const url = `http://localhost:5000/userbox/`;\n      const response = await fetch(url, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const data = await response.json();\n      setUsersData(data);\n    } catch {\n      // navigate('/login')\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artistView\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"txtgestion\",\n      children: \"Gestion des utilisateurs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n      isAdmin: isAdmin,\n      setIsAdmin: setIsAdmin,\n      user: user,\n      setUser: setUser,\n      isConnected: isConnected,\n      setIsConnected: setIsConnected\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this), usersData ? /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 0,\n      direction: \"column\",\n      sx: {\n        width: '85%',\n        marginTop: '3vh'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 13\n  }, this);\n}\n_s(AdminView, \"RKcLJqKPn8WsNGg9S4kTzvKccvw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminView;\nvar _c;\n$RefreshReg$(_c, \"AdminView\");","map":{"version":3,"names":["React","useEffect","useState","Sidebar","Link","useNavigate","Stack","CircularProgress","Avatar","Button","gotham","AccountCircleSharpIcon","jsxDEV","_jsxDEV","AdminView","_ref","_s","isAdmin","setIsAdmin","user","setUser","isConnected","setIsConnected","navigate","usersData","setUsersData","fetchUsers","url","response","fetch","method","headers","data","json","className","children","fileName","_jsxFileName","lineNumber","columnNumber","spacing","direction","sx","width","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/killt/Documents/POLYTECH/IG3/S6/ProjetWeb/Musicboxd/Musicboxd/Musicboxd/front-musicboxd/src/components/adminView.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport Sidebar from './sidebar';\r\nimport {Link, useNavigate } from 'react-router-dom';\r\nimport Stack from '@mui/material/Stack';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Avatar from '@mui/material/Avatar';\r\nimport Button from '@mui/material/Button';\r\nimport gotham from '../font/GothamBold.ttf';\r\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\r\n\r\nimport '../styles/adminview.css'\r\n\r\nexport default function AdminView({ isAdmin, setIsAdmin,user, setUser, isConnected, setIsConnected}) {\r\n    const navigate = useNavigate();\r\n    const [usersData, setUsersData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        if (user === '' || !isAdmin){\r\n          navigate('/login')\r\n        } else {\r\n            fetchUsers();\r\n        }\r\n      }, [user ,navigate]);\r\n\r\n      async function fetchUsers() {\r\n        try{\r\n            const url = `http://localhost:5000/userbox/`;\r\n            const response = await fetch(url, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            });\r\n            const data = await response.json()\r\n            setUsersData(data)\r\n        } catch {\r\n           // navigate('/login')\r\n        }\r\n        }\r\n\r\n        return(\r\n            <div className=\"artistView\">\r\n                <h1 className='txtgestion'>Gestion des utilisateurs</h1>\r\n                <Sidebar isAdmin={isAdmin} setIsAdmin={setIsAdmin} user={user} setUser={setUser} isConnected={isConnected} setIsConnected={setIsConnected}></Sidebar>\r\n                {usersData ? (\r\n                    <Stack spacing={0} direction=\"column\" sx={{width:'85%',marginTop:'3vh'}}>\r\n\r\n\r\n                    </Stack>\r\n                ):(\r\n                    <CircularProgress/>\r\n                )}\r\n\r\n\r\n            </div>\r\n        )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,WAAW;AAC/B,SAAQC,IAAI,EAAEC,WAAW,QAAQ,kBAAkB;AACnD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,gBAAgB,MAAM,gCAAgC;AAC7D,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,OAAOC,sBAAsB,MAAM,wCAAwC;AAE3E,OAAO,yBAAyB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,SAASA,CAAAC,IAAA,EAAoE;EAAAC,EAAA;EAAA,IAAnE;IAAEC,OAAO;IAAEC,UAAU;IAACC,IAAI;IAAEC,OAAO;IAAEC,WAAW;IAAEC;EAAc,CAAC,GAAAP,IAAA;EAC/F,MAAMQ,QAAQ,GAAGlB,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACmB,SAAS,EAAEC,YAAY,CAAC,GAAGvB,QAAQ,CAAC,IAAI,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,IAAIkB,IAAI,KAAK,EAAE,IAAI,CAACF,OAAO,EAAC;MAC1BM,QAAQ,CAAC,QAAQ,CAAC;IACpB,CAAC,MAAM;MACHG,UAAU,CAAC,CAAC;IAChB;EACF,CAAC,EAAE,CAACP,IAAI,EAAEI,QAAQ,CAAC,CAAC;EAEpB,eAAeG,UAAUA,CAAA,EAAG;IAC1B,IAAG;MACC,MAAMC,GAAG,GAAI,gCAA+B;MAC5C,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;QAClCG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB;MACA,CAAC,CAAC;MACF,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClCR,YAAY,CAACO,IAAI,CAAC;IACtB,CAAC,CAAC,MAAM;MACL;IAAA;EAEH;EAEA,oBACInB,OAAA;IAAKqB,SAAS,EAAC,YAAY;IAAAC,QAAA,gBACvBtB,OAAA;MAAIqB,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxD1B,OAAA,CAACV,OAAO;MAACc,OAAO,EAAEA,OAAQ;MAACC,UAAU,EAAEA,UAAW;MAACC,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA,OAAQ;MAACC,WAAW,EAAEA,WAAY;MAACC,cAAc,EAAEA;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,EACpJf,SAAS,gBACNX,OAAA,CAACP,KAAK;MAACkC,OAAO,EAAE,CAAE;MAACC,SAAS,EAAC,QAAQ;MAACC,EAAE,EAAE;QAACC,KAAK,EAAC,KAAK;QAACC,SAAS,EAAC;MAAK;IAAE;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAGjE,CAAC,gBAER1B,OAAA,CAACN,gBAAgB;MAAA6B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CACrB;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGA,CAAC;AAElB;AAACvB,EAAA,CA5CuBF,SAAS;EAAA,QACZT,WAAW;AAAA;AAAAwC,EAAA,GADR/B,SAAS;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}