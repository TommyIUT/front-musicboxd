{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\killt\\\\Documents\\\\POLYTECH\\\\IG3\\\\S6\\\\ProjetWeb\\\\Musicboxd\\\\Musicboxd\\\\Musicboxd\\\\front-musicboxd\\\\src\\\\components\\\\inscriptionView.jsx\";\nimport * as React from 'react';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\nimport gotham from '../font/GothamBold.ttf';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport '../styles/InscriptionView.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function InscriptionView() {\n  const bcrypt = require('bcryptjs');\n  const handleButtonClick = async e => {\n    e.preventDefault();\n    console.log(\"oui\");\n    const email = document.getElementById(\"email\").value;\n    const identifiant = document.getElementById(\"id\").value;\n    const password = document.getElementById(\"password\").value;\n    const password2 = document.getElementById('password2').value;\n    const hashedPassword = await bcrypt.hash(password, 10);\n    if (password === password2) {\n      try {\n        const formData = {\n          identifiant: identifiant,\n          pseudo: identifiant,\n          bio: \"Music addict\",\n          pronoms: \"\",\n          localisation: \"\",\n          mail: \"monmail@example.com\",\n          photo: \"url de ma photo\",\n          mot_de_passe: \"monmotdepasse\"\n        };\n        if (response.ok) {\n          toast.success('Compte créé avec succès !');\n        } else {\n          // There was an error, handle error scenario\n          const response = await fetch(`/api/routes/user/id/${identifiant}`);\n          const data = await response.json();\n          console.log(data);\n        }\n      } catch (err) {\n        console.log(err);\n        toast.error(err);\n      }\n    } else {\n      toast.error('Les mots de passe ne correspondent pas');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InscriptionView\",\n    children: /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 1,\n      direction: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"rejoindre\",\n        children: [\" Rejoindre \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/\",\n          className: \"lien\",\n          children: \"Musicboxd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 49\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"email\",\n            children: \"E-mail :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"identifiant\",\n            children: \"Identifiant :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"id\",\n            id: \"id\",\n            name: \"id\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            children: \"Mot de passe :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"input-login\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"password\",\n            children: \"Confirmez le mot de passe :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password2\",\n            name: \"password\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          onClick: handleButtonClick,\n          children: \"S'INSCRIRE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"noaccount\",\n        children: \" Vous avez d\\xE9j\\xE0 un compte ?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        href: \"/login\",\n        variant: \"contained\",\n        startIcon: /*#__PURE__*/_jsxDEV(AccountCircleSharpIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 66\n        }, this),\n        sx: {\n          '&:hover': {\n            color: 'white',\n            backgroundColor: '#1a1a1a'\n          },\n          color: 'black',\n          backgroundColor: '#1ED75A',\n          fontFamily: gotham\n        },\n        children: \"se connecter \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n_c = InscriptionView;\nvar _c;\n$RefreshReg$(_c, \"InscriptionView\");","map":{"version":3,"names":["React","Stack","Button","AccountCircleSharpIcon","gotham","ToastContainer","toast","jsxDEV","_jsxDEV","InscriptionView","bcrypt","require","handleButtonClick","e","preventDefault","console","log","email","document","getElementById","value","identifiant","password","password2","hashedPassword","hash","formData","pseudo","bio","pronoms","localisation","mail","photo","mot_de_passe","response","ok","success","fetch","data","json","err","error","className","children","spacing","direction","href","fileName","_jsxFileName","lineNumber","columnNumber","class","for","type","id","name","required","onClick","variant","startIcon","sx","color","backgroundColor","fontFamily","_c","$RefreshReg$"],"sources":["C:/Users/killt/Documents/POLYTECH/IG3/S6/ProjetWeb/Musicboxd/Musicboxd/Musicboxd/front-musicboxd/src/components/inscriptionView.jsx"],"sourcesContent":["import * as React from 'react';\r\nimport Stack from '@mui/material/Stack';\r\nimport Button from '@mui/material/Button';\r\nimport AccountCircleSharpIcon from '@mui/icons-material/AccountCircleSharp';\r\nimport gotham from '../font/GothamBold.ttf'\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nimport '../styles/InscriptionView.css';\r\n\r\n\r\nexport default function InscriptionView() {\r\n    const bcrypt = require('bcryptjs');\r\n\r\n    const handleButtonClick = async (e) => {\r\n        e.preventDefault();\r\n        console.log(\"oui\");\r\n        const email = document.getElementById(\"email\").value;\r\n        const identifiant = document.getElementById(\"id\").value;\r\n        const password = document.getElementById(\"password\").value;\r\n        const password2 = document.getElementById('password2').value;\r\n        const hashedPassword = await bcrypt.hash(password, 10);\r\n        \r\n        if (password === password2){\r\n            try {\r\n                const formData = {\r\n                    identifiant: identifiant,\r\n                    pseudo: identifiant,\r\n                    bio: \"Music addict\",\r\n                    pronoms: \"\",\r\n                    localisation: \"\",\r\n                    mail: \"monmail@example.com\",\r\n                    photo: \"url de ma photo\",\r\n                    mot_de_passe: \"monmotdepasse\"\r\n                  };\r\n                \r\n                if (response.ok) {\r\n                  toast.success('Compte créé avec succès !')\r\n                } else {\r\n                    // There was an error, handle error scenario\r\n                    const response = await fetch(`/api/routes/user/id/${identifiant}`);\r\n                    const data = await response.json();\r\n                    console.log(data);\r\n                }\r\n              } catch (err) {\r\n                console.log(err);\r\n                toast.error(err);\r\n              }\r\n        } else{\r\n            toast.error('Les mots de passe ne correspondent pas');\r\n        }\r\n        \r\n    };\r\n    \r\n    return (\r\n        <div className='InscriptionView'>\r\n            <Stack spacing={1} direction=\"column\">\r\n            <p className='rejoindre'> Rejoindre <a href='/' className='lien'>Musicboxd</a></p>\r\n\r\n            <form >\r\n                <div class=\"input-login\">\r\n                    <label for=\"email\">E-mail :</label>\r\n                    <input type=\"email\" id=\"email\" name=\"email\" required></input>\r\n                </div>\r\n                <div class=\"input-login\">\r\n                    <label for=\"identifiant\">Identifiant :</label>\r\n                    <input type=\"id\" id=\"id\" name=\"id\" required></input>\r\n                </div>\r\n                <div class=\"input-login\">\r\n                    <label for=\"password\">Mot de passe :</label>\r\n                    <input type=\"password\" id=\"password\" name=\"password\" required></input>\r\n                </div>\r\n                <div class=\"input-login\">\r\n                    <label for=\"password\">Confirmez le mot de passe :</label>\r\n                    <input type=\"password\" id=\"password2\" name=\"password\" required></input>\r\n                </div>\r\n                <button type=\"submit\" className='login-button' onClick={handleButtonClick}>S'INSCRIRE</button>\r\n            </form>\r\n            <ToastContainer />\r\n\r\n            <div class=\"divider\"></div>\r\n\r\n            <p className='noaccount'> Vous avez déjà un compte ?</p>\r\n            <Button href=\"/login\" variant=\"contained\" startIcon={<AccountCircleSharpIcon />} sx={{ '&:hover': {\r\n                    color: 'white',\r\n                    backgroundColor: '#1a1a1a',\r\n                }, color: 'black', backgroundColor: '#1ED75A', fontFamily: gotham}}>se connecter </Button>\r\n            </Stack>\r\n        </div>\r\n    \r\n    );\r\n  }\r\n  "],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,sBAAsB,MAAM,wCAAwC;AAC3E,OAAOC,MAAM,MAAM,wBAAwB;AAC3C,SAASC,cAAc,EAAEC,KAAK,QAAQ,gBAAgB;AACtD,OAAO,uCAAuC;AAI9C,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,eAAe,SAASC,eAAeA,CAAA,EAAG;EACtC,MAAMC,MAAM,GAAGC,OAAO,CAAC,UAAU,CAAC;EAElC,MAAMC,iBAAiB,GAAG,MAAOC,CAAC,IAAK;IACnCA,CAAC,CAACC,cAAc,EAAE;IAClBC,OAAO,CAACC,GAAG,CAAC,KAAK,CAAC;IAClB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK;IACpD,MAAMC,WAAW,GAAGH,QAAQ,CAACC,cAAc,CAAC,IAAI,CAAC,CAACC,KAAK;IACvD,MAAME,QAAQ,GAAGJ,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC,CAACC,KAAK;IAC1D,MAAMG,SAAS,GAAGL,QAAQ,CAACC,cAAc,CAAC,WAAW,CAAC,CAACC,KAAK;IAC5D,MAAMI,cAAc,GAAG,MAAMd,MAAM,CAACe,IAAI,CAACH,QAAQ,EAAE,EAAE,CAAC;IAEtD,IAAIA,QAAQ,KAAKC,SAAS,EAAC;MACvB,IAAI;QACA,MAAMG,QAAQ,GAAG;UACbL,WAAW,EAAEA,WAAW;UACxBM,MAAM,EAAEN,WAAW;UACnBO,GAAG,EAAE,cAAc;UACnBC,OAAO,EAAE,EAAE;UACXC,YAAY,EAAE,EAAE;UAChBC,IAAI,EAAE,qBAAqB;UAC3BC,KAAK,EAAE,iBAAiB;UACxBC,YAAY,EAAE;QAChB,CAAC;QAEH,IAAIC,QAAQ,CAACC,EAAE,EAAE;UACf7B,KAAK,CAAC8B,OAAO,CAAC,2BAA2B,CAAC;QAC5C,CAAC,MAAM;UACH;UACA,MAAMF,QAAQ,GAAG,MAAMG,KAAK,CAAE,uBAAsBhB,WAAY,EAAC,CAAC;UAClE,MAAMiB,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,EAAE;UAClCxB,OAAO,CAACC,GAAG,CAACsB,IAAI,CAAC;QACrB;MACF,CAAC,CAAC,OAAOE,GAAG,EAAE;QACZzB,OAAO,CAACC,GAAG,CAACwB,GAAG,CAAC;QAChBlC,KAAK,CAACmC,KAAK,CAACD,GAAG,CAAC;MAClB;IACN,CAAC,MAAK;MACFlC,KAAK,CAACmC,KAAK,CAAC,wCAAwC,CAAC;IACzD;EAEJ,CAAC;EAED,oBACIjC,OAAA;IAAKkC,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BnC,OAAA,CAACP,KAAK;MAAC2C,OAAO,EAAE,CAAE;MAACC,SAAS,EAAC,QAAQ;MAAAF,QAAA,gBACrCnC,OAAA;QAAGkC,SAAS,EAAC,WAAW;QAAAC,QAAA,GAAC,aAAW,eAAAnC,OAAA;UAAGsC,IAAI,EAAC,GAAG;UAACJ,SAAS,EAAC,MAAM;UAAAC,QAAA,EAAC;QAAS;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eAElF1C,OAAA;QAAAmC,QAAA,gBACInC,OAAA;UAAK2C,KAAK,EAAC,aAAa;UAAAR,QAAA,gBACpBnC,OAAA;YAAO4C,GAAG,EAAC,OAAO;YAAAT,QAAA,EAAC;UAAQ;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACnC1C,OAAA;YAAO6C,IAAI,EAAC,OAAO;YAACC,EAAE,EAAC,OAAO;YAACC,IAAI,EAAC,OAAO;YAACC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC3D,eACN1C,OAAA;UAAK2C,KAAK,EAAC,aAAa;UAAAR,QAAA,gBACpBnC,OAAA;YAAO4C,GAAG,EAAC,aAAa;YAAAT,QAAA,EAAC;UAAa;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAC9C1C,OAAA;YAAO6C,IAAI,EAAC,IAAI;YAACC,EAAE,EAAC,IAAI;YAACC,IAAI,EAAC,IAAI;YAACC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAClD,eACN1C,OAAA;UAAK2C,KAAK,EAAC,aAAa;UAAAR,QAAA,gBACpBnC,OAAA;YAAO4C,GAAG,EAAC,UAAU;YAAAT,QAAA,EAAC;UAAc;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eAC5C1C,OAAA;YAAO6C,IAAI,EAAC,UAAU;YAACC,EAAE,EAAC,UAAU;YAACC,IAAI,EAAC,UAAU;YAACC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACpE,eACN1C,OAAA;UAAK2C,KAAK,EAAC,aAAa;UAAAR,QAAA,gBACpBnC,OAAA;YAAO4C,GAAG,EAAC,UAAU;YAAAT,QAAA,EAAC;UAA2B;YAAAI,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAQ,eACzD1C,OAAA;YAAO6C,IAAI,EAAC,UAAU;YAACC,EAAE,EAAC,WAAW;YAACC,IAAI,EAAC,UAAU;YAACC,QAAQ;UAAA;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACrE,eACN1C,OAAA;UAAQ6C,IAAI,EAAC,QAAQ;UAACX,SAAS,EAAC,cAAc;UAACe,OAAO,EAAE7C,iBAAkB;UAAA+B,QAAA,EAAC;QAAU;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3F,eACP1C,OAAA,CAACH,cAAc;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG,eAElB1C,OAAA;QAAK2C,KAAK,EAAC;MAAS;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAO,eAE3B1C,OAAA;QAAGkC,SAAS,EAAC,WAAW;QAAAC,QAAA,EAAC;MAA2B;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,eACxD1C,OAAA,CAACN,MAAM;QAAC4C,IAAI,EAAC,QAAQ;QAACY,OAAO,EAAC,WAAW;QAACC,SAAS,eAAEnD,OAAA,CAACL,sBAAsB;UAAA4C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAI;QAACU,EAAE,EAAE;UAAE,SAAS,EAAE;YAC1FC,KAAK,EAAE,OAAO;YACdC,eAAe,EAAE;UACrB,CAAC;UAAED,KAAK,EAAE,OAAO;UAAEC,eAAe,EAAE,SAAS;UAAEC,UAAU,EAAE3D;QAAM,CAAE;QAAAuC,QAAA,EAAC;MAAa;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACtF;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACN;AAGZ;AAACc,EAAA,GAhFqBvD,eAAe;AAAA,IAAAuD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}